sudo: false # use new container
language: c

branches:
  except: /^(gh-pages|v0\.[0-8].*)/

addons:
  apt:
    packages: &common_deps
      - nasm

# This is required to use a version of cppcheck other than that
# suplied with the operating system
cppcheck_defs: &cppcheck_defs
  - CPPCHECK_VER=2.1
  - CPPCHECK_REPO=https://github.com/danmar/cppcheck.git

min_amd64_deps: &min_amd64_deps
  - *common_deps
  - libpam0g-dev
  - libssl-dev
  - libx11-dev
  - libxrandr-dev
  - libxfixes-dev

min_amd64_conf: &min_amd64_conf
  env:
    - CONF_FLAGS="--disable-ipv6 --disable-jpeg --disable-fuse --disable-mp3lame
                  --disable-fdkaac --disable-opus --disable-rfxcodec --disable-painter
                  --disable-pixman"
  addons:
    apt:
      packages:
        - *min_amd64_deps

max_amd64_deps: &max_amd64_deps
  - *min_amd64_deps
  - libfuse-dev
  - libjpeg-dev
  - libmp3lame-dev
  - libfdk-aac-dev
  - libopus-dev
  - libpixman-1-dev

max_amd64_conf: &max_amd64_conf
  env:
    - CONF_FLAGS="--enable-ipv6 --enable-jpeg --enable-fuse --enable-mp3lame
                  --enable-fdkaac --enable-opus --enable-rfxcodec --enable-painter
                  --enable-pixman"
    - DISTCHECK=1
  addons:
    apt:
      packages:
        - *max_amd64_deps

max_debug_amd64_conf: &max_debug_amd64_conf
  env:
    - CONF_FLAGS="--enable-ipv6 --enable-jpeg --enable-fuse --enable-mp3lame
                  --enable-fdkaac --enable-opus --enable-rfxcodec --enable-painter
                  --enable-pixman --enable-xrdpdebug"
    - DISTCHECK=1
  addons:
    apt:
      packages:
        - *max_amd64_deps

max_x86_deps: &max_x86_deps
  - *common_deps
  - g++-multilib
  - gcc-multilib
  - libgl1-mesa-dev:i386
  - libglu1-mesa-dev:i386
  - libjpeg-dev:i386
  - libmp3lame-dev:i386
  - libfdk-aac-dev:i386
  - libopus-dev:i386
  - libpam0g-dev:i386
  - libssl-dev:i386
  - libx11-dev:i386
  - libxext-dev:i386
  - libxfixes-dev:i386
  - libxrandr-dev:i386
  - libxrender-dev:i386
  - openssl:i386

# No --enable-pixman to allow testing the replacement code
# No --enable-fuse due to failing libfuse-dev:i386 package install
max_x86_conf: &max_x86_conf
  env:
    - CONF_FLAGS="--enable-ipv6 --enable-jpeg --disable-fuse --enable-mp3lame
                  --enable-fdkaac --enable-opus --enable-rfxcodec --enable-painter
                  --disable-pixman --host=i686-linux"
    - PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig
    - CFLAGS=-m32
    - LDFLAGS=-m32
  addons:
    apt:
      packages:
        - *max_x86_deps

# For cppcheck, we've got a custom script
cppcheck_conf: &cppcheck_conf
  env:
    - *cppcheck_defs

  addons:
    apt:
      packages:
        - libz3-dev
        - z3

  script:
    - ./bootstrap
    - scripts/install_cppcheck.sh $CPPCHECK_REPO $CPPCHECK_VER
    - scripts/run_cppcheck.sh -v $CPPCHECK_VER


matrix:
  include:

  # # Minimal amd64 build
  # - compiler: gcc
  #   << : *min_amd64_conf
  # - compiler: g++
  #   << : *min_amd64_conf
  # - compiler: clang
  #   << : *min_amd64_conf

  # # Maximal amd64 build
  # - compiler: gcc
  #   << : *max_amd64_conf
  # - compiler: g++
  #   << : *max_amd64_conf
  # - compiler: clang
  #   << : *max_amd64_conf

  # # Maximal debug amd64 build
  # - compiler: gcc
  #   << : *max_debug_amd64_conf
    
  # # Maximal x86 build
  # - compiler: gcc
  #   << : *max_x86_conf
  # - compiler: g++
  #   << : *max_x86_conf
  # - compiler: clang
  #   << : *max_x86_conf

  # # cppcheck
  # - name: cppcheck
  #   compiler: gcc
  #   << : *cppcheck_conf
    
  # win32
  - name: win32
    os: windows
    compiler: gcc
    env:
      - CONF_FLAGS="--disable-ipv6 --disable-jpeg --disable-fuse --disable-mp3lame
                  --disable-fdkaac --disable-opus --disable-rfxcodec --disable-painter
                  --disable-pixman --disable-pam"
    before_install:
      - |
        if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
            echo && \
            echo "---- INSTALLATION OF CYGWIN  ---" && \
            echo && \
            choco.exe install cygwin && \
            echo && \
            echo "----- INSTALLATION OF CYGWIN PACKAGES -----" && \
            echo && \
            C:\\tools\\cygwin\\cygwinsetup.exe -q -P autoconf,automake,libtool,make,nasm,openssl-devel,pkg-config,gcc,libX11-devel && \
            echo && \
            echo "----------- END OF INSTALLATION -----------" && \
            echo
        fi
    # before_install:
    #   - |-
    #     case $TRAVIS_OS_NAME in
    #       windows)
    #         ls -al /c/tools
    #         choco uninstall -y mingw msys2
    #         #test -d /c/tools/cygwin/bin || choco install cygwin
    #         choco install cygwin
    #         C:\\tools\\cygwin\\cygwinsetup.exe -q -P autoconf,automake,libtool,make,nasm,openssl-devel,pkg-config,gcc,libX11-devel
    #         export PATH=/C/tools/cygwin/bin:$PATH
    #         ls -l /c/tools/cygwin/bin/bash.exe
    #         cmd.exe //C RefreshEnv.cmd
    #         cmd.exe /c "/C/tools/cygwin/bin/bash.exe -l -c echo -- 'hellow world 1' "
    #         /C/tools/cygwin/bin/bash.exe -c "echo hello world"
    #         echo "PATH -- $PATH"
    #         taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
    #         #[[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
    #         #choco uninstall -y mingw
    #         #choco upgrade --no-progress -y msys2
    #         #export msys2='cmd //C RefreshEnv.cmd '
    #         #export msys2+='& set MSYS=winsymlinks:nativestrict '
    #         #export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
    #         #export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
    #         #export msys2+=" -msys2 -c "\"\$@"\" --"
    #         #$msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain autoconf automake libtool make nasm openssl-devel pkg-config gcc
    #         ### Install more MSYS2 packages from https://packages.msys2.org/base here
    #         #taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
    #         #export PATH=/C/tools/msys64/mingw64/bin:$PATH
    #         #export MAKE=mingw32-make  # so that Autotools can find it
    #         ;;
    #     esac
    # before_cache:
    #   - |-
    #       case $TRAVIS_OS_NAME in
    #         windows)
    #           # https://unix.stackexchange.com/a/137322/107554
    #           #$msys2 pacman --sync --clean --noconfirm
    #           ;;
    #       esac
    # cache:
    #   directories:
    #   - $HOME/AppData/Local/Temp/chocolatey
    #   # - /C/tools/cygwin
    script:
      - export GS_PWD=$(pwd)
      - |
        pwd && \
        mkdir -p "$HOME/_CYGWIN_" && \
        cmd.exe //c C:\\tools\\cygwin\\bin\\bash.exe -l -c " \
                echo && \
                echo \"----------- AUTORECONF --FORCE ------------\" ; \
                echo ; \
                pwd ; \
                ls -al ; \
                echo GS_PWD = $GS_PWD ; \
                ls -al $GS_PWD ; \
                echo /cygdrive/c/Users/travis/build/aquesnel/xrdp ; \
                ls -al /cygdrive/c/Users/travis/build/aquesnel/xrdp ; \
                cd /cygdrive/c/Users/travis/build/aquesnel/xrdp ; \
                ./bootstrap && \
                echo && \
                echo \"---------------- CONFIGURE ----------------\" && \
                echo && \
                ./configure $CONF_FLAGS && \
                echo && \
                echo \"------------------ MAKE -------------------\" && \
                echo && \
                make CFLAGS="$CFLAGS" && \
                echo && \
                echo \"--------------- DONE ----------------------\" \
                "
      # - echo "SHELL -- $SHELL"
      # - echo "PATH -- $PATH"
      # - pwd
      # - export shell='cmd.exe //C RefreshEnv.cmd & cmd.exe /c "/C/tools/cygwin/bin/bash.exe -l -c \$\* --"'
      # - $shell './bootstrap'
      # - ./bootstrap
      # - cmd.exe /c "/C/tools/cygwin/bin/bash.exe -l -c './bootstrap'"
      # - "C:\\tools\\cygwin\\bin\\bash.exe -c './bootstrap'"
      # - /C/tools/cygwin/bin/bash.exe -c './bootstrap'
      # - powershell -Command "C:\\tools\\cygwin\\bin\\bash.exe -c './bootstrap'";
      # - ./configure $CONF_FLAGS
      # - make CFLAGS="$CFLAGS"
      # - test -z "$DISTCHECK" || make distcheck
  allow_failures:
    # - name: win32
  fast_finish: true
  
script:
  - ./bootstrap
  - ./configure $CONF_FLAGS
  - make CFLAGS="$CFLAGS"
  - test -z "$DISTCHECK" || make distcheck
